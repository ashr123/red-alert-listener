name: GraalVM Native Image builds
on:
  push:
    tags:
      - v*
jobs:
  build:
    name: Target ${{ matrix.os }}-${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        include:
#          - os: macos
#            architecture: aarch64
          - os: macos
            architecture: amd64
#          - os: windows
#            architecture: aarch64
          - os: windows
            architecture: amd64

#          - os: ubuntu
#            architecture: aarch64
          - os: ubuntu
            architecture: amd64
#          - os: ubuntu-latest
#            architecture: riscv64
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Creating jar package
        run: mvn package

      - name: Creating native image
        run: native-image -jar target/red-alert-listener-*-jar-with-dependencies.jar && file=$(echo red-alert-listener*-with-dependencies*) base="red-alert-listener"; [[ $file == *.* ]] && ext=".${file##*.}" || ext=''; mv "$file" "${base}${ext}"

      - name: Upload binary
        uses: actions/upload-artifact@v4.6.0
        with:
          name: red-alert-listener-${{ matrix.os }}-${{ matrix.architecture }}
          path: red-alert-listener-*-jar-with-dependencies*
          compression-level: 9

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/download-artifact@v4.1.8
        name: Downloading artifacts

      - name: Display structure of downloaded files
        run: ls -lGFhR

      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          artifacts: red-alert-listener*/*
